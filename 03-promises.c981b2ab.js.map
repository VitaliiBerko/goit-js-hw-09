{"mappings":"iMACA,SAASA,EAAMC,GACb,OAAOC,SAASC,cAAcF,E,gTAFhCG,EAAA,SAKA,IAAMC,EAAO,CACXC,KAAMN,EAAM,SACZO,MAAOP,EAAM,kBACbQ,KAAMR,EAAM,iBACZS,OAAQT,EAAM,oBAMZU,EAAiBL,EAAKI,OAAOE,MAYjC,SAASC,EAAcC,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,IAGAC,G,OAlBRK,QAAQC,IAAIjB,EAAKC,MACjBe,QAAQC,IAAIjB,EAAKE,OACjBc,QAAQC,IAAIjB,EAAKG,MACjBa,QAAQC,IAAIjB,EAAKI,QAEjBY,QAAQC,IAAIjB,EAAKG,KAAKG,OACtBU,QAAQC,IAAIZ,GAmBZE,IACGW,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUN,EAAKiB,EAALjB,MACjBc,QAAQC,IAAI,uBAAwCG,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,M,IAE3DmB,OAAM,SAAAF,G,IAAGX,EAAQW,EAARX,SAAUN,EAAKiB,EAALjB,MAClBc,QAAQC,IAAI,sBAAqCG,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,M,IAG3DF,EAAKC,KAAKqB,iBAAiB,UAE3B,SAA4BC,GAC1BA,EAAEC,iBACQC,YAAYlB,IAAiBP,EAAKG,KAAKG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nfunction getEl(selector) {\n  return document.querySelector(selector);\n}\n\nconst refs = {\n  form: getEl('.form'),\n  delay: getEl('[name=\"delay\"]'),\n  step: getEl('[name=\"step\"]'),\n  amount: getEl('[name=\"amount\"]')\n};\n\n\nlet timerId = null;\nlet promCounter = 0;\nlet maxPromCounter = refs.amount.value;\n\n\nconsole.log(refs.form);\nconsole.log(refs.delay);\nconsole.log(refs.step);\nconsole.log(refs.amount);\n\nconsole.log(refs.step.value);\nconsole.log(maxPromCounter);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve();\n      } else {\n        // Reject\n        reject();\n      }\n    });\n  });\n\n};\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\nrefs.form.addEventListener('submit', onBtnCreatePrClick);\n\nfunction onBtnCreatePrClick(e) {\n  e.preventDefault();\n  timerId = setInterval(createPromise(), refs.step.value);\n}"],"names":["$ce04d3a99e08e73b$var$getEl","selector","document","querySelector","parcelRequire","$ce04d3a99e08e73b$var$refs","form","delay","step","amount","$ce04d3a99e08e73b$var$maxPromCounter","value","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","then","param","concat","catch","addEventListener","e","preventDefault","setInterval"],"version":3,"file":"03-promises.c981b2ab.js.map"}