{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,SAASC,EAAMC,GACb,OAAOC,SAASC,cAAcF,E,CAGhC,MAAMG,EAAO,CACXC,KAAML,EAAM,SACZM,MAAON,EAAM,kBACbO,KAAMP,EAAM,iBACZQ,OAAQR,EAAM,oBAIhB,IAAIS,EAAU,KAEVC,EAAaN,EAAKI,OAAOG,MACzBC,EAAOR,EAAKE,MAAMK,MAYtB,SAASE,EAAcC,EAAUC,GAG/B,GADS,MACML,EAIf,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,4BAAsCF,OAG9CG,EAAO,2BAAmCH,MAAU,GAEtD,IAbFQ,cAAcd,E,CAdlBL,EAAKC,KAAKmB,iBAAiB,UAwC3B,SAA4BC,GAC1BA,EAAEC,iBACFjB,EAAUkB,YAAYd,IAAiBT,EAAKG,KAAKI,OACjDN,KAAKuB,O,IAZPf,EAnCe,EAmCSD,GACrBiB,MAAKC,IACJC,EAAAjC,GAASkC,OAAOC,QAAQH,EAAO,IAEhCI,OAAMC,IACLJ,EAAAjC,GAASkC,OAAOI,QAAQD,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nfunction getEl(selector) {\n  return document.querySelector(selector);\n}\n\nconst refs = {\n  form: getEl('.form'),\n  delay: getEl('[name=\"delay\"]'),\n  step: getEl('[name=\"step\"]'),\n  amount: getEl('[name=\"amount\"]')\n};\n\n\nlet timerId = null;\nlet position = 1;\nlet maxPostion = refs.amount.value;\nlet delay =refs.delay.value;\n\nrefs.form.addEventListener('submit', onBtnCreatePrClick);\n\n// console.log(refs.form);\n// console.log(refs.delay);\n// console.log(refs.step);\n// console.log(refs.amount);\n// console.log(refs.step.value);\n// console.log(maxPromCounter);\n\n\nfunction createPromise(position, delay) {\n  \n  position=+1;\n  if(position ===maxPostion) {\n    clearInterval(timerId);\n    return;\n  }\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    });\n  });\n};\n\ncreatePromise(position, delay)\n  .then(result => {\n    Notiflix.Notify.success(result);\n  })\n  .catch(error => {\n    Notiflix.Notify.failure(error);\n  });\n\n\nfunction onBtnCreatePrClick(e) {\n  e.preventDefault();\n  timerId = setInterval(createPromise(), refs.step.value);\n  form.reset();\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$getEl","selector","document","querySelector","$47d4ff9957288465$var$refs","form","delay","step","amount","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$maxPostion","value","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","clearInterval","addEventListener","e","preventDefault","setInterval","reset","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.74b3bab9.js.map"}